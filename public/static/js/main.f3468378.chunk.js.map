{"version":3,"sources":["../node_modules/jspdf/dist sync","components/Add/Add.jsx","components/Table/MainTable.jsx","components/Edit/Edit.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Add","props","useState","showAdd","setShowAdd","pregCheck","setPregCheck","aliveCheck","setAliveCheck","setUIData","UIData","today","Date","toISOString","substr","className","onSubmit","preventDefault","Id","target","value","Mother","Father","DateOfBirth","G","Gender","options","selectedIndex","IsPregnant","checked","IsAlive","console","log","fetch","method","body","JSON","stringify","headers","then","res","json","data","alert","type","name","defaultValue","selected","onChange","onClick","MainTable","mainTitle","useEffect","tableIcons","Filter","forwardRef","ref","FirstPage","LastPage","Export","NextPage","PreviousPage","ResetSearch","Search","ViewColumn","SortArrow","map","animal","ID","mother","father","dateOfBirth","gender","isPregnant","isAlive","title","icons","columns","field","cellStyle","minWidth","border","backgroundColor","color","exportButton","pageSizeOptions","exportAllData","doubleHorizontalScroll","columnsButton","headerStyle","borderBottom","padding","margin","textAlign","Edit","showEdit","setShowEdit","item","setItem","idRef","useRef","current","length","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3468378.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 319;","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react'\r\n\r\n\r\nimport \"./Add.css\"\r\n\r\nfunction Add(props) {\r\n\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const [pregCheck, setPregCheck] = useState(false);\r\n    const [aliveCheck, setAliveCheck] = useState(true);\r\n    const {UIData,setUIData} = props\r\n\r\n\r\n\r\n\r\n    function handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        const Id = e.target.Id.value\r\n        const Mother = e.target.Mother.value\r\n        const Father = e.target.Father.value\r\n        const DateOfBirth = e.target.DateOfBirth.value\r\n        const G = e.target.Gender\r\n        const Gender = G.options[G.selectedIndex].value\r\n        const IsPregnant = e.target.IsPregnant.checked\r\n        const IsAlive = e.target.IsAlive.checked\r\n        console.log(Id)\r\n        if(Id != \"\"){\r\n        fetch('/add', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ Id, Mother, Father, DateOfBirth, Gender, IsPregnant, IsAlive }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data) {\r\n                    alert(\"ADDED SUCCESSFULLY\")\r\n                    setShowAdd(false)\r\n                    updateUIData()\r\n                } else {\r\n                    alert(\"ID ALREADY IN USE\")\r\n                }\r\n            })\r\n        }else{\r\n            alert(\"ID CAN NOT BE EMPTY\")\r\n        }\r\n\r\n    }\r\n    function handleShowAdd(e) {\r\n        e.preventDefault();\r\n        setShowAdd(true)\r\n\r\n    }\r\n\r\n\r\n    function updateUIData(){\r\n        fetch('/getAllData', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({}),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          }).then(res => res.json())\r\n            .then(data => {\r\n              setUIData(data)\r\n              console.log(\"EDIT EDIT EDIT EDIT EDIT EDIT EDIT EDIT EDIT EDIT \")\r\n            })\r\n    }\r\n\r\n\r\n    const today = new Date().toISOString().substr(0, 10);;\r\n    return (\r\n        <div className>\r\n            <h1>ADD</h1>\r\n            {showAdd ?\r\n                <form onSubmit={handleSubmit}>\r\n                    ID:  <input type=\"number\" name=\"Id\" /> <br></br>\r\n                    Mother: <input type=\"number\" name=\"Mother\" /><br></br>\r\n                    Father: <input type=\"number\" name=\"Father\" /><br></br>\r\n                    Date Of Birth: <input type=\"date\" name=\"DateOfBirth\" defaultValue={today} /><br></br>\r\n                    Gender:\r\n                    <select className=\"genderSelect\" name=\"Gender\">\r\n                        <option selected value=\" \"></option>\r\n                        <option value=\"Male\">Male</option>\r\n                        <option value=\"Female\">Female</option>\r\n                    </select><br></br>\r\n\r\n                    Pregnant: <input name=\"IsPregnant\" type=\"checkbox\" checked={pregCheck} onChange={() => { setPregCheck(!pregCheck) }} /><br></br>\r\n\r\n                    Alive: <input name=\"IsAlive\" type=\"checkbox\" checked={aliveCheck} onChange={() => { setAliveCheck(!aliveCheck) }} /><br></br>\r\n\r\n                    <input type=\"submit\" value=\"Submit\" className=\"button\" />\r\n                </form>\r\n                :\r\n                <div>\r\n                    <button onClick={handleShowAdd} className=\"showAdd\">ADD NEW ITEM</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Add;","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport \"./MainTable.css\";\r\n\r\n\r\n// import  Material Ui Icons for Table \r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport MaterialTable from 'material-table';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nfunction MainTable(props) {\r\n\r\n  // const [animals, setAnimals] = useState([])\r\n\r\n  const {UIData,setUIData,mainTitle} = props\r\n\r\n  useEffect(() => {\r\n    fetch('/getAllData', {\r\n      method: \"POST\",\r\n      body: JSON.stringify({}),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }).then(res => res.json())\r\n      .then(data => {\r\n        setUIData(data)\r\n        console.log(\"WE ARE HERE\")\r\n      })\r\n  }, [])\r\n\r\n  // setAnimals(UIData)\r\n  \r\n\r\n\r\n  // Intiliaze Icons \r\n  const tableIcons = {\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  };\r\n\r\n  // Table Titles \r\n  const columns = [\r\n    {\r\n      title: 'ID', field: 'ID',\r\n      cellStyle: {\r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n\r\n      },\r\n    },\r\n    {\r\n      title: 'Mother', field: 'Mother',\r\n      cellStyle: {\r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n      },\r\n    },\r\n    {\r\n      title: 'Father', field: 'Father',\r\n      cellStyle: {\r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n      },\r\n    },\r\n    {\r\n      title: 'Date Of Birth', field: 'DateOfBirth',\r\n      cellStyle: {\r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n\r\n      },\r\n    },\r\n    {\r\n      title: 'Gender', field: 'Gender',\r\n      cellStyle: {\r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n\r\n      },\r\n    },\r\n    {\r\n      title: 'Is Pregnant', field: 'IsPregnant',\r\n      cellStyle: {\r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n\r\n      },\r\n    },\r\n    {\r\n      title: 'Is Alive', field: 'IsAlive',\r\n      cellStyle: {\r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n\r\n      },\r\n    }\r\n  ]\r\n\r\n\r\n  let data = []\r\n  UIData.map((animal) => {\r\n    return data = [...data,\r\n    {\r\n      ID: animal.ID,\r\n      Mother: animal.mother,\r\n      Father: animal.father,\r\n      DateOfBirth: animal.dateOfBirth,\r\n      Gender: animal.gender,\r\n      IsPregnant: animal.isPregnant,\r\n      IsAlive: animal.isAlive\r\n\r\n    }\r\n    ]\r\n  })\r\n\r\n  return (\r\n    <MaterialTable\r\n      title={mainTitle}\r\n      icons={tableIcons}\r\n      columns={columns}\r\n      data={data}\r\n      options={{\r\n        exportButton: true,\r\n        pageSizeOptions: [5, 10, 20, 50],\r\n        exportAllData: true,\r\n        doubleHorizontalScroll: true,\r\n        columnsButton: true,\r\n        headerStyle: {\r\n          backgroundColor: '#004470',\r\n          color: '#FFF',\r\n          border: '1px solid black',\r\n          borderBottom: 'none',\r\n          padding: 10,\r\n          margin: 10,\r\n          textAlign: 'center',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default MainTable;","import React from 'react'\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react'\r\nimport MainTable from '../Table/MainTable'\r\n\r\n\r\nimport \"./Edit.css\"\r\n\r\nfunction Edit(props) {\r\n\r\n    const {UIData,setUIData} = props\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [item, setItem] = useState({})\r\n    \r\n    const [pregCheck, setPregCheck] = useState(false);\r\n    const [aliveCheck, setAliveCheck] = useState(true);\r\n\r\n    const idRef = useRef(\"\")\r\n\r\n    function updateUIData(){\r\n        fetch('/getAllData', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({}),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          }).then(res => res.json())\r\n            .then(data => {\r\n              setUIData(data)\r\n              console.log(\"EDIT EDIT EDIT EDIT EDIT EDIT EDIT EDIT EDIT EDIT \")\r\n            })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        const Id = e.target.Id.value\r\n        const Mother = e.target.Mother.value\r\n        const Father = e.target.Father.value\r\n        const DateOfBirth = e.target.DateOfBirth.value\r\n        const Gender = e.target.Gender.value\r\n        \r\n        const IsPregnant = e.target.IsPregnant.checked\r\n        const IsAlive = e.target.IsAlive.checked\r\n\r\n\r\n\r\n        fetch('/edit', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ Id, Mother, Father, DateOfBirth, Gender, IsPregnant, IsAlive }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setShowEdit(false)\r\n                idRef.current.value = \"\"\r\n                updateUIData()\r\n                alert(\"UPDATED SUCCESSFULLY\")\r\n\r\n            })\r\n    }\r\n\r\n    function handleShowEdit(e) {\r\n        e.preventDefault();\r\n        const Id = e.target.Id.value\r\n        console.log(Id)\r\n        fetch('/getItemToEdit', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ Id }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.length > 0) {\r\n                    setItem(data[0])\r\n                    console.log(data[0])\r\n                    data[0].isPregnant ? setPregCheck(true) : setPregCheck(false)\r\n                    data[0].isAlive ? setAliveCheck(true) : setAliveCheck(false)\r\n                    setShowEdit(true)\r\n\r\n\r\n                }\r\n                else {\r\n                    console.log(\"NOT FOUND\")\r\n                    alert(\"THIS ID WAS NOT FOUND\")\r\n                }\r\n            })\r\n\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <h1>EDIT</h1>\r\n            {showEdit ?\r\n                <div>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label>\r\n                            ID: <input type=\"number\" name=\"Id\" value={item.ID} /> <br></br>\r\n                            Mother: <input type=\"number\" name=\"Mother\" defaultValue={item.mother} /><br></br>\r\n                            Father: <input type=\"number\" name=\"Father\" defaultValue={item.father} /><br></br>\r\n                            Date Of Birth: <input type=\"date\" name=\"DateOfBirth\" defaultValue={item.dateOfBirth} /><br></br>\r\n\r\n                            Gender:\r\n                            <select className=\"genderSelect\" name=\"Gender\">\r\n                                <option selected value=\" \"></option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select><br></br>\r\n\r\n                            Pregnant: <input name=\"IsPregnant\" type=\"checkbox\" checked={pregCheck} onChange={() => { setPregCheck(!pregCheck) }}/><br></br>\r\n                            Alive: <input name=\"IsAlive\" type=\"checkbox\" checked={aliveCheck} onChange={() => { setAliveCheck(!aliveCheck) }}/><br></br>\r\n\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                        </label>\r\n                    </form >\r\n                </div >\r\n                :\r\n                <div>\r\n                    <form onSubmit={handleShowEdit}>\r\n                        <label>\r\n                            ID: <input type=\"number\" name=\"Id\" ref={idRef} /> <br></br>\r\n                            <input type=\"submit\" value=\"Edit\" />\r\n                        </label>\r\n\r\n                    </form >\r\n                </div>\r\n            }\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Edit;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Add from '../src/components/Add/Add';\r\nimport Edit from '../src/components/Edit/Edit'\r\nimport MainTable from './components/Table/MainTable';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\tconst [UIData, setUIData] = useState([])\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<div className=\"App-header\">\r\n\r\n\t\t\t\t<div className=\"addComp\">\r\n\t\t\t\t\t<Add UIData={UIData} setUIData={setUIData}></Add>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"editComp\">\r\n\t\t\t\t\t<Edit UIData={UIData} setUIData={setUIData}></Edit>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"mainTableComp\">\r\n\t\t\t\t\t<MainTable UIData={UIData} setUIData={setUIData} mainTitle=\"ALL THE DATA\"></MainTable>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}