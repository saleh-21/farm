{"version":3,"sources":["../node_modules/jspdf/dist sync","components/Table/MainTable.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","MainTable","props","tableIcons","Filter","forwardRef","ref","FirstPage","LastPage","Export","NextPage","PreviousPage","ResetSearch","Search","ViewColumn","SortArrow","title","icons","columns","field","cellStyle","minWidth","border","backgroundColor","color","options","exportButton","pageSizeOptions","exportAllData","doubleHorizontalScroll","columnsButton","headerStyle","borderBottom","padding","textAlign","App","console","log","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d36ab55.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 316;","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport \"./MainTable.css\";\r\n\r\n\r\n// import  Material Ui Icons for Table \r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport MaterialTable from 'material-table';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\n\r\nfunction MainTable(props){\r\n    // const {animals} = props\r\n\r\n      // Intiliaze Icons \r\n  const tableIcons = {\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  };\r\n\r\n  // Table Titles \r\n  const columns = [\r\n    {\r\n      title: 'ID', field: 'ID',\r\n      cellStyle: {  \r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n       \r\n      },\r\n    },\r\n    {\r\n      title: 'Mother', field: 'Mother',\r\n      cellStyle: {\r\n        minWidth: 300,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n      },\r\n    },\r\n    {\r\n      title: 'Father', field: 'Father',\r\n      cellStyle: {\r\n        minWidth: 100,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n      },\r\n    },\r\n    {\r\n      title: 'DateOfBirth', field: 'DateOfBirth',\r\n      cellStyle: {\r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n\r\n      },\r\n    },\r\n    {\r\n      title: 'Gender', field: 'Gender',\r\n      cellStyle: {\r\n        minWidth: 150,\r\n        border: '1px solid steelBlue',\r\n        backgroundColor: 'whiteSmoke',\r\n        color: 'black',\r\n\r\n      },\r\n    }\r\n  ]\r\n\r\n  // \r\n//   let data = []\r\n//   tasks.map((task) => {\r\n//     return data = [...data,\r\n//     {\r\n//       jiraId: task.jiraItem.id,\r\n//       jiraName: task.jiraItem.name,\r\n//       jiraType: task.jiraItem.type,\r\n//       jiraPriority: task.jiraItem.priority,\r\n//       JiraItemStatus: task.jiraItem.status,\r\n//       jiraParentId: task.jiraItem.parentId,\r\n//       functionalTest: task.jiraItem.functionalTest,\r\n//       qaRepresentative: task.jiraItem.qaRepresentative,\r\n//       fixVersion: task.jiraItem.fixVersion,\r\n//       qcRequirementId: task.qcItem.requirementId,\r\n//       qcRequirementType: task.qcItem.requirementType,\r\n//       qcStatus: task.qcItem.status,\r\n//       updatedTime: task.diffItem.updatedTime,\r\n//       modifyType:task.diffItem.type,\r\n//       fieldName: task.diffItem.updatedField.fieldName,\r\n//       oldValue: task.diffItem.updatedField.oldValue,\r\n//       newValue: task.diffItem.updatedField.newValue,\r\n//     }\r\n//     ]\r\n//   })\r\n  \r\n  return (\r\n        <MaterialTable\r\n          title=\"ANIMALS\"\r\n          icons={tableIcons}\r\n          columns={columns}\r\n        //   data={data}\r\n          options={{\r\n            exportButton: true,\r\n            pageSizeOptions:[5,20,50],\r\n            exportAllData:true,\r\n            doubleHorizontalScroll:true,\r\n            columnsButton:true,\r\n            headerStyle: {\r\n              backgroundColor: '#00447C',\r\n              color: '#FFF',\r\n              border: '1px solid black',\r\n              borderBottom:'none',\r\n              padding: 3,\r\n              textAlign: 'center',\r\n            },\r\n          }}\r\n        />\r\n  );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default MainTable;","import React, { useState } from 'react';\r\nimport './App.css';\r\n// import Add from '../src/components/Add/Add';\r\n// import Edit from '../src/components/Edit/Edit'\r\nimport MainTable from './components/Table/MainTable';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  console.log(\"AAAAAA\")\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-header\">\r\n\r\n        <div className=\"addComp\">\r\n        </div>\r\n\r\n        <div className=\"editComp\">\r\n        </div>\r\n\r\n        <div className=\"mainTableComp\">\r\n          {<MainTable></MainTable>}\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}